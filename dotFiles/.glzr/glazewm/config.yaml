general:
  # Commands to run when the WM has started (e.g. to run a script or launch
  # another application). Here we are running a batch script to start Zebar.
  startup_commands: ['shell-exec zebar']

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: true

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false 

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: 'window_focus'
  
gaps:
  # Gap between adjacent windows.
  inner_gap: '10px'

  # Gap between windows and the screen edge.
  outer_gap:
    top: '35px'
    right: '10px'
    bottom: '10px'
    left: '10px'

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: '#8dbcff'

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: true
      color: '#a1a1a1'

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: 'tiling'
  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true

      # Whether to show floating windows as always on top.
      shown_on_top: true

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: true

      # Whether to show fullscreen windows as always on top.
      shown_on_top: true

workspaces:
  - name: '1'
    display_name: "Browser"  
    bind_to_monitor: 0
    keep_alive: true 
  - name: '2'
    display_name: "Game_Launchers"
    bind_to_monitor: 1
    keep_alive: true 
  - name: '3'
    display_name: "Games"
    keep_alive: true 
    bind_to_monitor: 0
  - name: '4'
  - name: '5'
  - name: '6'
  - name: '7'
    display_name: "Telegram"
    bind_to_monitor: 1
  - name: '8'
    display_name: "Phone"
    bind_to_monitor: 1
    keep_alive: true
  - name: '9'
    display_name: "Discord"
    bind_to_monitor: 1
    keep_alive: true 
  - name: '0'
    display_name: "Spotify"
    bind_to_monitor: 1
    keep_alive: true 

window_rules:
  - commands: ['set-floating']
    match:
      - window_process: { regex: '[(?:CLion64)|(?:pycharm64)]' }
        window_title: { equals: 'Settings' }

  - commands: ['ignore']
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: 'zebar' }

      # Ignores picture-in-picture windows for browsers.
      #- window_title: { regex: '[Pp]icture.in.[Pp]icture' }
      # window_class: { regex: 'Chrome_WidgetWin_1|MozillaDialogClass' }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: 'PowerToys.PowerAccent' }
      #      - window_process: { equals: 'Lively' }
      #      - window_class: { regex: 'HwndWrapper*' }
      - window_process: { equals: 'Overwatch'}  
      

  - commands: ['move --workspace 1']
    match:
      - window_process: { regex: '[V|v]ivaldi' }

  - commands: ['move --workspace 2']
    match:
      - window_process: { regex: '.*[Ss]team.*' }
      - window_title: { regex: '.*[Bb]attle\.net.*' }

  - commands: ['move --workspace 3']
    match:
      - window_process: { equals: "DeadByDaylight-Win64-Shipping" }
      - window_process: { equals: "Warframe" }
      - window_process: { equals: "VRising" }
      - window_process: { equals: "eldenring" }


  - commands: ['move --workspace  7']
    match:
      - window_process: { regex: 'Telegram' }
      
  - commands: ['move --workspace 8']
    match:
      - window_process: { regex: 'PhoneExperienceHost' }

  - commands: ['move --workspace 9']
    match:
      - window_process: { equals: 'Discord' }

  - commands: ['move --workspace 0']
    match:
      - window_process: { equals: 'Spotify' }



binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: 'resize'
    keybindings:
      - commands: ['resize --width -2%']
        bindings: ['h', 'left']
      - commands: ['resize --width +2%']
        bindings: ['l', 'right']
      - commands: ['resize --height +2%']
        bindings: ['k', 'up']
      - commands: ['resize --height -2%']
        bindings: ['j', 'down']
      # Press enter/escape to return to default keybindings.
      - commands: ['wm-disable-binding-mode --name resize']
        bindings: ['escape', 'enter']

  # When enabled, all keybindings are disabled except for f23+shift+p which
  # returns to default keybindings.
  - name: 'pause'
    keybindings:
      - commands: ['wm-disable-binding-mode --name pause']
        bindings: ['f23+shift+p']

keybindings:
  # Shift focus in a given direction.
  - commands: ['focus --direction left']
    bindings: ['f23+h', 'f23+left']
  - commands: ['focus --direction right']
    bindings: ['f23+l', 'f23+right']
  - commands: ['focus --direction up']
    bindings: ['f23+k', 'f23+up']
  - commands: ['focus --direction down']
    bindings: ['f23+j', 'f23+down']

  # Move focused window in a given direction.
  - commands: ['move --direction left']
    bindings: ['f23+shift+h', 'f23+shift+left']
  - commands: ['move --direction right']
    bindings: ['f23+shift+l', 'f23+shift+right']
  - commands: ['move --direction up']
    bindings: ['f23+shift+k', 'f23+shift+up']
  - commands: ['move --direction down']
    bindings: ['f23+shift+j', 'f23+shift+down']

  # Resize focused window by a percentage or pixel amount.
  - commands: ['resize --width -2%']
    bindings: ['f23+u']
  - commands: ['resize --width +2%']
    bindings: ['f23+p']
  - commands: ['resize --height +2%']
    bindings: ['f23+o']
  - commands: ['resize --height -2%']
    bindings: ['f23+i']

  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name 'resize'.
  - commands: ['wm-enable-binding-mode --name resize']
    bindings: ['f23+r']

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ['toggle-tiling-direction']
    bindings: ['f23+v']

  # Change focus from tiling windows -> floating -> fullscreen.
#  - commands: ['wm-cycle-focus']
#   bindings: ['f23+space']

  # Change the focused window to be floating.
  - commands: ['toggle-floating --centered']
    bindings: ['f23+shift+space']

  # Change the focused window to be tiling.
  - commands: ['toggle-tiling']
    bindings: ['f23+t']

  # Change the focused window to be fullscreen.
  - commands: ['toggle-fullscreen']
    bindings: ['f23+f']

  # Minimize focused window.
  - commands: ['toggle-minimized']
    bindings: ['f23+m']

  # Close focused window.
  - commands: ['close']
    bindings: ['f23+shift+q']

  # Kill GlazeWM process safely.
  - commands: ['shell-exec --hide-window powershell if (Get-Process -Name "zebar") { Stop-Process -Name "zebar" -Force }', 'wm-exit']
    bindings: ['f23+shift+e']

  # Re-evaluate configuration file.
  - commands: ['wm-reload-config']
    bindings: ['f23+shift+r']

  # Redraw all windows.
  - commands: ['wm-redraw']
    bindings: ['f23+shift+w']

  # Launch ~~CMD terminal. Alternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  - commands: ['shell-exec wt']
    bindings: ['f23+enter']

  # Change focus to a workspace defined in `workspaces` config.
  - commands: ['focus --workspace 1']
    bindings: ['f23+1']
  - commands: ['focus --workspace 2']
    bindings: ['f23+2']
  - commands: ['focus --workspace 3']
    bindings: ['f23+3']
  - commands: ['focus --workspace 4']
    bindings: ['f23+4']
  - commands: ['focus --workspace 5']
    bindings: ['f23+5']
  - commands: ['focus --workspace 6']
    bindings: ['f23+6']
  - commands: ['focus --workspace 7']
    bindings: ['f23+7']
  - commands: ['focus --workspace 8']
    bindings: ['f23+8']
  - commands: ['focus --workspace 9']
    bindings: ['f23+9']
  - commands: ['focus --workspace 0']
    bindings: ['f23+0']

  # Move the focused window's parent workspace to a monitor in a given
  # direction.
#  - commands: ['move-workspace --direction left']
#    bindings: ['f23+shift+a']
#  - commands: ['move-workspace --direction right']
#    bindings: ['f23+shift+f']
#  - commands: ['move-workspace --direction up']
#    bindings: ['f23+shift+d']
#  - commands: ['move-workspace --direction down']
#    bindings: ['f23+shift+s']

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ['move --workspace 1']
    bindings: ['f23+shift+1']
  - commands: ['move --workspace 2']
    bindings: ['f23+shift+2']
  - commands: ['move --workspace 3']
    bindings: ['f23+shift+3']
  - commands: ['move --workspace 4']
    bindings: ['f23+shift+4']
  - commands: ['move --workspace 5']
    bindings: ['f23+shift+5']
  - commands: ['move --workspace 6']
    bindings: ['f23+shift+6']
  - commands: ['move --workspace 7']
    bindings: ['f23+shift+7']
  - commands: ['move --workspace 8']
    bindings: ['f23+shift+8']
  - commands: ['move --workspace 9']
    bindings: ['f23+shift+9']
  - commands: ['move --workspace 0']
    bindings: ['f23+shift+0']
